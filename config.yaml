# ==============================================================================
# EcoRAN Power Manager xApp - Configuration File
# ==============================================================================

# ------------------------------------------------------------------------------
# Logging & General Settings
# ------------------------------------------------------------------------------
# Logging verbosity for console output: 0 (silent), 1 (errors), 2 (warnings), 3 (info), 4 (debug_kpm), 5 (debug_all)
console_verbosity_level: 3
file_verbosity_level: 4 # Log more details to the file by default
log_file_path: "/mnt/data/ecoran/" # Ensure this path is writable

# Path to the configuration file for the underlying xAppBase library.
# The xApp will look for `xapp-descriptor.json` if this is not set.
# xapp_base_config_file: "config/xapp-descriptor.json"

# Dry Run Mode: If true, logs actions but doesn't execute system changes (TDP, SST).
dry_run: false

# ------------------------------------------------------------------------------
# System Integration Paths
# ------------------------------------------------------------------------------
# Path to 'intel-speed-select' utility.
intel_speed_select_path: "intel-speed-select"

# Base path for Intel RAPL power capping interface.
rapl_path_base: "/sys/class/powercap/intel-rapl:0"

# (Optional) Override for RAPL max energy value if the counter wraps unexpectedly.
# The code has a sensible default (2^60-1), so this is rarely needed.
# rapl_max_energy_uj_override: 262143999998

# ------------------------------------------------------------------------------
# Core Affinity & RAN Component Definitions
# ------------------------------------------------------------------------------
# Define RAN components and the CPU cores they are affinitized to.
# This is used for Intel SST-CP CLOS setup.
ran_cores:
  cu0: "4"
  du0: "0,6,7,8"
  du1: "1,10,11,12"
  du3: "2,14,15,16,21-24" # 21-24: iPerf3 servers 
  du4: "3,18,19,20,25-31" # 25-31: idle CPUs

# Mapping of DU component names (from ran_cores) to their gNB IDs for KPM.
# This is the source of truth for which DUs the xApp will manage.
gnb_ids:
  du0: "gnbd_999_091_00019b_0"
  du1: "gnbd_999_092_00019b_1"
  du3: "gnbd_999_094_00019b_3"
  du4: "gnbd_999_095_00019b_4"

# ------------------------------------------------------------------------------
# Intel Speed Select Technology (SST-CP) Configuration
# ------------------------------------------------------------------------------
# Associates RAN components to SST-CP Classes of Service (CLOS).
# Cores in 'ru_timing_cores' are automatically added to CLOS 0.
clos_association:
  0: [cu0, du0] # High-priority: CU, a main DU, and timing-critical cores.
  1: [du1]
  2: [du3]
  3: [du4]

# Sets the guaranteed minimum CPU frequency (in MHz) for each CLOS.
clos_min_frequency:
  0: 2400 # Highest priority CLOS
  1: 2000
  2: 1800
  3: 800 # Lowest priority CLOS

clos_max_frequency:
  0: 3800 # Highest priority CLOS
  1: 3000
  2: 2600
  3: 2400 # Lowest priority CLOS

# ------------------------------------------------------------------------------
# Main Control Loop & PID Settings
# ------------------------------------------------------------------------------
# Granularity of the main control loop in seconds.
main_loop_sleep_s: 1.0

# How often to print the main statistics summary to the log.
stats_print_interval_s: 10.0

# Critical cores for the RU timing PID safety net.
ru_timing_cores: "5,9,13,17"

# Target CPU utilization percentage for the 'ru_timing_cores'. If exceeded, the PID acts.
target_ru_timing_cpu_usage: 99.8

# Interval (in seconds) at which the RU Timing PID logic runs.
ru_timing_pid_interval_s: 3.0

# Step size (in Watts) for the RU Timing PID when it triggers an increase.
tdp_adjustment_step_w_large: 3.0

# Number of recent samples to average for the RU Timing PID's CPU usage calculation.
max_cpu_usage_samples: 3

# ------------------------------------------------------------------------------
# KPM (Key Performance Metrics) Subscription Settings
# ------------------------------------------------------------------------------
# The RAN Function ID for KPM service.
kpm_ran_func_id: 2

kpm_subscriptions:
  # Metrics to request per UE in Style 4 reports.
  style4_metrics_per_ue:
    - "DRB.RlcSduTransmittedVolumeDL"
    - "DRB.RlcSduTransmittedVolumeUL"
  # How often the gNB should generate and send a KPM report.
  style4_report_period_ms: 5000
  # The time window over which the gNB should aggregate data for a single report.
  style4_granularity_period_ms: 5000
  du_activity_timeout_s: 6.0
  # --- Optimizer Trigger Logic ---
  # Number of reports to collect from EACH DU before making a decision.
  optimizer_reports_per_du: 1
  # Safety timeout in seconds in case a DU stops sending reports.
  optimizer_max_interval_s: 10.0

# ------------------------------------------------------------------------------
# TDP (Thermal Design Power) & Contextual Bandit Optimizer
# ------------------------------------------------------------------------------
# Absolute allowed range for the CPU package TDP limit in Watts.
tdp_range:
  min: 100
  max: 180

contextual_bandit:
  # Defines the discrete actions the agent can take (TDP change in Watts).
  actions_tdp_delta_w:
    "dec_10": -10.0
    "dec_5": -5.0
    "dec_2": -2.0
    "hold": 0.0
    "inc_2": 2.0
    "inc_5": 5.0
    "inc_10": 10.0

  # Throughput threshold (in Mbps) to consider a UE "active" for the count.
  active_ue_throughput_threshold_mbps: 5.0

  # If the total network throughput changes by more than this factor (e.g., 1.0 = 100%)
  # between cycles, the agent will not update its model on that noisy data point.
  throughput_change_threshold_for_discard: 1.0

  # Parameters for the Bootstrapped Thompson Sampling model.
  bootstrapped_ts:
    nsamples: 20          # Number of bootstrapped models. More is more robust.
    lambda_: 1.0          # L2 regularization for the underlying linear regression.
    fit_intercept: True   # Whether the model should learn a bias/intercept term.
    # Prior to help guide the agent's initial exploration. "uniform_optimistic" is a good default.
    beta_prior: "uniform_optimistic" # Options: "auto", "uniform_optimistic", null

  # Parameters used to normalize context features to a [0, 1] range.
  # Adjust these to match the expected operational range of your system.
  normalization_parameters:
    cpu_headroom: {'min': -5.0, 'max': 20.0}
    num_active_ues: {'min': 0.0, 'max': 5.0} # Set to a reasonable max UE count for your network.
